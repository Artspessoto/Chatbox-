body{
    margin:0;
    padding: 0;
    font-family: sans-serif;
}

.wrapper{
    height: 100vh;
    width: 100vw;
    background-color: rgb(53, 53, 53);
    display: flex;
    justify-content: center;
    align-items: center;
}

.chatbot{
    height: 4rem;
    width: 8rem;
    border-radius: 36px;
    border: 4px solid #949494;
    padding: 0 1rem;

    box-sizing: border-box;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    position: relative;

    transform: translateY(0); /*translate reposiciona um elemento na posição vertical ou horizontal*/
    animation: chatTranslate 2s ease-in-out infinite;
    /*relembrando: ease-in-out == animação inicial lenta e final lenta também*/
    /*chatTranslate nome da animação que foi criada a partir do @keyframe*/
}

.chatbot::before{
    content: '';
    width: 0;
    height: 0;   
    position: absolute;
    bottom: -1.3rem;
    left: 2rem;
    border-left: 2px solid transparent;
    border-right: 17px solid transparent;
    border-top: 17px solid #949494;

    /*isso formará um triângulo para baixo, em resumo, o triângulo de CSS é composto sempre pela borda
    na direção inversa a que você deseja que ela apareça. Exemplos:
#triangulo-para-direita {
  width: 0; 
  height: 0; 
  border-top: 25px solid transparent;
  border-bottom: 25px solid transparent;
  border-left: 25px solid #4C4B63;
}
  #triangulo-para-cima {
  width: 0; 
  height: 0; 
  border-left: 25px solid transparent;
  border-right: 25px solid transparent;
  border-bottom: 25px solid #5386E4;
}
    */
}

.chatbot__loading{
    height: 10px;
    width: 10px;
    border-radius: 50%/*para formar um círculo*/;
    background-color: #949494;
    transform: scale(1);
}

/*primeira "bolinha"*/
.chatbot__loading:nth-child(1){
    animation: pulse 1.5s ease-in-out infinite;
}

/*segunda "bolinha"*/
.chatbot__loading:nth-child(2){
    animation: pulse 1.5s ease-in-out infinite;
    animation-delay: 0.2s;
}

/*terceira "bolinha"*/
.chatbot__loading:nth-child(3){
    animation: pulse 1.5s ease-in-out infinite;
    animation-delay: 0.4s;
}

/*a partir do nth-child tratando os 3 filhos, ou no caso, as reticências, a ideia é fazer uma animação
sincronizada*/


/*animação para pulsar as reticências junto com a animação do chat*/
@keyframes pulse {
    0%{
        transform: scale(1);
    }
    50%{
        transform: scale(1.5);
    }
    100%{
        transform: scale(1);
    }
}

@keyframes chatTranslate {
    0%{
        transform: translateY(0);
    }

    50%{
        transform: translateY(15px);
        /*ele está fazendo o chatbot descer 15px para baixo(no eixo Y) e depois ele volta ao seu estado
        inicial com o 100%(fim da animação)*/
    }

    100%{
        transform: translateY(0);
    }
}












